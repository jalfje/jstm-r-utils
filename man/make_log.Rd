% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/make_log.R
\name{make_log}
\alias{make_log}
\title{Create a logging function.}
\usage{
make_log(to.stdout = TRUE, to.file = FALSE, file = NA)
}
\arguments{
\item{to.stdout}{logical. If \code{TRUE}, output is printed to console at
each call to \code{logit} by default. The \code{echo} parameter can override this.}

\item{to.file}{logical. If \code{TRUE}, output is printed to \code{file} at each call
to \code{logit} by default. The \code{save} parameter can override this, but only if
\code{to.file} is \code{TRUE}.}

\item{file}{a character vector naming the logging file. If \code{to.file} is
\code{FALSE}, this parameter is ignored.}
}
\value{
Logging function
}
\description{
\code{make_log} returns a function ready for logging to a file and/or stdout.
}
\details{
\code{make_log} returns a closure which formats and logs an arbitrary number
of arguments. It prepends the current time to each line, and concatenates
the arguments together to create a single line of output. The output line is
then output to a file and/or stdout (i.e. the console) via \code{cat}.

For the purpose of clarity throughout this documentation, we will use
\code{logit()} to represent the function returned from \code{make_log}, i.e.\preformatted{logit <- make_log()
}

After creating \code{logit}, you can log your data by using
\code{logit("my", variable, list, "or other data")}.

The \code{newline} option in \code{logit} allows for logging multiple times on the
same output line. The idea behind this is to allow for logging within a loop
to log in each iteration as they occur, somewhat like a progress bar.
As shown in the example, this is quite straightforward. Note that the
timestamp will show the time of the first such call.

In each call to \code{logit}, if the parameter \code{echo} is \code{TRUE}, then the output
will be printed to stdout. If the parameter \code{save} is \code{TRUE}, then the
output will be appended to the file specified by the parameter \code{file} passed
to \code{make_log}. The default value for \code{echo} is the value of \code{to.stdout},
and the default value for \code{save} is \code{to.file}. Specifying values for \code{echo}
or \code{save} will override these defaults. Note that if \code{to.file} is \code{FALSE},
then setting \code{save} will have no effect; if a logging file is ever desired,
it must be specified when \code{make.log} is called.
}
\examples{
log.it <- make.log(TRUE, TRUE, "output.log")
log.it("Hello world!")
log.it("Starting for loop. 12 iterations.")
for(m in 1:12) { log.it(m, newline=FALSE) }
log.it("Ended for loop.")
# [12:50:42] Hello world!
# [12:50:42] Starting for loop. 12 iterations.
# [12:50:42] 1 2 3 4 5 6 7 8 9 10 11 12
# [12:50:42] Ended for loop.

}
